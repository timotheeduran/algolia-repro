import type { ClientOptions } from '@algolia/client-common';
import type { Region } from '../src/personalizationClient';
export { apiClientVersion, Region } from '../src/personalizationClient';
export * from '../model';
/**
 * The client type.
 */
export type PersonalizationClient = ReturnType<typeof personalizationClient>;
export declare function personalizationClient(appId: string, apiKey: string, region: Region, options?: ClientOptions): {
    transporter: import("@algolia/client-common").Transporter;
    appId: string;
    clearCache(): Promise<void>;
    readonly _ua: string;
    addAlgoliaAgent(segment: string, version?: string): void;
    customDelete({ path, parameters }: import("../model").CustomDeleteProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customGet({ path, parameters }: import("../model").CustomGetProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customPost({ path, parameters, body }: import("../model").CustomPostProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customPut({ path, parameters, body }: import("../model").CustomPutProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    deleteUserProfile({ userToken }: import("../model").DeleteUserProfileProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").DeleteUserProfileResponse>;
    getPersonalizationStrategy(requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").PersonalizationStrategyParams>;
    getUserTokenProfile({ userToken }: import("../model").GetUserTokenProfileProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetUserTokenResponse>;
    setPersonalizationStrategy(personalizationStrategyParams: import("../model").PersonalizationStrategyParams, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").SetPersonalizationStrategyResponse>;
};
//# sourceMappingURL=browser.d.ts.map