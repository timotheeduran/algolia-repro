import type { ClientOptions } from '@algolia/client-common';
import type { Region } from '../src/analyticsClient';
export { apiClientVersion, Region } from '../src/analyticsClient';
export * from '../model';
/**
 * The client type.
 */
export type AnalyticsClient = ReturnType<typeof analyticsClient>;
export declare function analyticsClient(appId: string, apiKey: string, region?: Region, options?: ClientOptions): {
    transporter: import("@algolia/client-common").Transporter;
    appId: string;
    clearCache(): Promise<void>;
    readonly _ua: string;
    addAlgoliaAgent(segment: string, version?: string): void;
    customDelete({ path, parameters }: import("../model").CustomDeleteProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customGet({ path, parameters }: import("../model").CustomGetProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customPost({ path, parameters, body }: import("../model").CustomPostProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    customPut({ path, parameters, body }: import("../model").CustomPutProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<Record<string, any>>;
    getAddToCartRate({ index, startDate, endDate, tags }: import("../model").GetAddToCartRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetAddToCartRateResponse>;
    getAverageClickPosition({ index, startDate, endDate, tags }: import("../model").GetAverageClickPositionProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetAverageClickPositionResponse>;
    getClickPositions({ index, startDate, endDate, tags }: import("../model").GetClickPositionsProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetClickPositionsResponse>;
    getClickThroughRate({ index, startDate, endDate, tags }: import("../model").GetClickThroughRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetClickThroughRateResponse>;
    getConversionRate({ index, startDate, endDate, tags }: import("../model").GetConversionRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetConversionRateResponse>;
    getNoClickRate({ index, startDate, endDate, tags }: import("../model").GetNoClickRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetNoClickRateResponse>;
    getNoResultsRate({ index, startDate, endDate, tags }: import("../model").GetNoResultsRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetNoResultsRateResponse>;
    getPurchaseRate({ index, startDate, endDate, tags }: import("../model").GetPurchaseRateProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetPurchaseRateResponse>;
    getRevenue({ index, startDate, endDate, tags }: import("../model").GetRevenueProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetRevenue>;
    getSearchesCount({ index, startDate, endDate, tags }: import("../model").GetSearchesCountProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetSearchesCountResponse>;
    getSearchesNoClicks({ index, startDate, endDate, limit, offset, tags, }: import("../model").GetSearchesNoClicksProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetSearchesNoClicksResponse>;
    getSearchesNoResults({ index, startDate, endDate, limit, offset, tags, }: import("../model").GetSearchesNoResultsProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetSearchesNoResultsResponse>;
    getStatus({ index }: import("../model").GetStatusProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetStatusResponse>;
    getTopCountries({ index, startDate, endDate, limit, offset, tags }: import("../model").GetTopCountriesProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopCountriesResponse>;
    getTopFilterAttributes({ index, search, startDate, endDate, limit, offset, tags, }: import("../model").GetTopFilterAttributesProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopFilterAttributesResponse>;
    getTopFilterForAttribute({ attribute, index, search, startDate, endDate, limit, offset, tags, }: import("../model").GetTopFilterForAttributeProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopFilterForAttributeResponse>;
    getTopFiltersNoResults({ index, search, startDate, endDate, limit, offset, tags, }: import("../model").GetTopFiltersNoResultsProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopFiltersNoResultsResponse>;
    getTopHits({ index, search, clickAnalytics, revenueAnalytics, startDate, endDate, limit, offset, tags, }: import("../model").GetTopHitsProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopHitsResponse>;
    getTopSearches({ index, clickAnalytics, revenueAnalytics, startDate, endDate, orderBy, direction, limit, offset, tags, }: import("../model").GetTopSearchesProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetTopSearchesResponse>;
    getUsersCount({ index, startDate, endDate, tags }: import("../model").GetUsersCountProps, requestOptions?: import("@algolia/client-common").RequestOptions): Promise<import("../model").GetUsersCountResponse>;
};
//# sourceMappingURL=browser.d.ts.map